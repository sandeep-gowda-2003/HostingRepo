<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Chat</title>
    <style>
        body {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .client {
            display: flex;
            flex-direction: row-reverse;
        }

        .messages li {
            list-style: none;
            background-color: green;
            max-width: 20vw;
            min-width: 3rem;
            margin: 0.2rem 0.5rem;
            color: white;
            padding: 10px;
            border-radius: 15px;
        }

        .server {
            display: flex;
            flex-direction: row;
        }

        .messages {
            width: 80vw;
            height: 85vh;
            border: 2px solid;
            position: relative;
            overflow: scroll;
            scrollbar-width: none;

        }

        .messageBox>input {
            width: 50vw;
            height: 2rem;
            margin-top: 1rem;
        }
    </style>
</head>

<body>
    <div class="messages">
    </div>
    <div class="messageBox">
        <input type="text" value="" placeholder="Enter message">
    </div>

    <script src="https://cdn.socket.io/4.7.5/socket.io.min.js"></script>
    <script>
        const socket = io("http://localhost:8000");
        console.log("attemtping!!");

        let messages = document.getElementsByClassName('messages')[0];

        document.addEventListener('keydown', (e) => {
            if (e.key == 'Enter') {

                let messageClient = document.createElement('li');


                let message = document.createElement('div')

                message.classList.add('client')

                let input = document.querySelector('input');
                if (input.value) {
                    messageClient.innerText = input.value;

                    message.appendChild(messageClient);

                    messages.appendChild(message);

                    console.log(input.value);


                    //emit events   
                    socket.emit('message', input.value);
                    input.value = ''
                }
            }
        })

        // triggered when there is a reply from server
        socket.on('reply', (r) => {
            console.log(r);
            let messageClient = document.createElement('li');

            let message = document.createElement('div')

            message.classList.add('server')

            messageClient.innerText = r;

            message.appendChild(messageClient);

            messages.appendChild(message);

            messages.scrollTo(0, messages.scrollHeight)
        }
        )
    </script>
</body>

</html>